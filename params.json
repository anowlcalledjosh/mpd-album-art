{"name":"MPD Album Art Grabber","tagline":"Python module to query current MPD song, and find an album art match from local filesystem or LastFM.","body":"# mpd-album-art-grabber\r\n\r\nPython module to query current MPD song, and find an album art match from local filesystem or LastFM.\r\n\r\n## Requirements\r\n`pylast`\r\n`python-mpd2`\r\n\r\n```sh\r\n$ pip install -r requirements.txt\r\n```\r\n\r\n## Example Usage\r\n### Play some jams\r\n\r\nStart up your MPD session as normal, e.g.\r\n```sh\r\n$ mpd\r\n```\r\nTake note of which port it's running on (normally `localhost:6600`).\r\n### Hook up to the MPD server\r\n```python\r\nimport mpd_album_art, mpd\r\n# Open an MPD client\r\nmpd_client = MPDClient()\r\n# Connect to MPD session\r\nmpd_client.connect(\"localhost\", 6600)\r\n# ...\r\n```\r\n### Find what's making those groovy vibes\r\n```python\r\n# ...\r\nsong = mpd_client.currentsong()\r\n# ...\r\n```\r\n### Grab some art\r\nArtwork is saved to `save_dir`\r\n`library_dir` should be where your music files are (this is used in `Grabber.get_local_art`)\r\n```python\r\n# ...\r\ngrabber = mpd_album_art.Grabber(\r\n    save_dir=\"/home/jamie/.conky/scripts/album_art\",\r\n    library_dir=\"/home/jamie/Music/Library\"\r\n    )\r\ngrabber.get_art(song)\r\n```\r\nNow, if the album isn't too *obscurely titled*, you should have its artwork in `save_dir`\r\nsaved as something like `\"Artist_Name_Album_Name_h4sh.png\"`.\r\nAnd a symlink should exist in there saved as `\"current\"` pointing to it.\r\n\r\nYou can also check your local filesystem for artwork in the music directory:\r\n```python\r\ngrabber.get_local_art(song)\r\n```\r\nThis will create a symlink called `\"current\"` in `save_dir` pointing to the largest image file in the directory\r\n\r\nIssuing these commands when there's no **music pumping** will remove the symlink.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}